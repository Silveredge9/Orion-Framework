//--------------------------------------------------------------------------------------------------------------------------------------
// RESPONSIVE BREAKPOINTS
//--------------------------------------------------------------------------------------------------------------------------------------

// Create media queries using breakpoints defined in data/config.js


// BASIC USAGE
//--------------------------------------------------------------------------------------------------------------------------------------

// Basic usage showing an element which is display block and then changes to display none once the "xlg" breakpoint has been hit.

/*
.myElement {
	display:block;
	@include bp(xlg) {
		display:none;
	}
}
*/


// Another usage showing an element which is set to display block once the "md" breakpoint has been hit and the screen orientation is portrait.
// This mixin can be placed within an element as above or elements can be placed within the mixin as below.

/*
@include bp(md, "orientation:portrait") {
	.myElement {
		display:block;
	}
}
*/


// SASS
//--------------------------------------------------------------------------------------------------------------------------------------

// Mobile first
@mixin bp($breakpoint, $extras: false) {
	// Only if Responsive Layout
	@if $responsive == true {
		// Retrieves the value from the key
		$value: map-get($breakpoints, $breakpoint);
	 
		// If the key exists in the map
		@if $value != null {
			@if $extras {
				@media (min-width: $value) and ($extras) {
					@content;
				}
			}
			@else {
				@media (min-width: $value) {
					@content;
				}
			}
		}
	}
}

// Desktop first
@mixin bpMax($breakpoint, $extras: false) {
	// Only if Responsive Layout
	@if $responsive == true {
		// Retrieves the value from the key
		$value: map-get($breakpoints, $breakpoint);
	 
		// If the key exists in the map
		@if $value != null {
			@if $extras {
				@media (max-width: $value) and ($extras) {
					@content;
				}
			}
			@else {
				@media (max-width: $value) {
					@content;
				}
			}
		}
	}
}

// In between 2 breakpoints
@mixin bpBetween($from, $to) {
	// Only if Responsive Layout
	@if $responsive == true {
		// Retrieves the value from the key
		$from: map-get($breakpoints, $from);
		$to: map-get($breakpoints, $to);
	 
		// If the key exists in the map
		@if $from and $to != null {
			// Prints a media query based on the value
			@media (min-width: $from) and (max-width: $to)	{
				@content;
			}
		}
	}
}